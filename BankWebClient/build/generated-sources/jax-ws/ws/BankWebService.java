
package ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "BankWebService", targetNamespace = "http://WS/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface BankWebService {


    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod(operationName = "RealizarDeposito")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "RealizarDeposito", targetNamespace = "http://WS/", className = "ws.RealizarDeposito")
    @ResponseWrapper(localName = "RealizarDepositoResponse", targetNamespace = "http://WS/", className = "ws.RealizarDepositoResponse")
    @Action(input = "http://WS/BankWebService/RealizarDepositoRequest", output = "http://WS/BankWebService/RealizarDepositoResponse")
    public int realizarDeposito(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        float arg2);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod(operationName = "AlterarConta")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "AlterarConta", targetNamespace = "http://WS/", className = "ws.AlterarConta")
    @ResponseWrapper(localName = "AlterarContaResponse", targetNamespace = "http://WS/", className = "ws.AlterarContaResponse")
    @Action(input = "http://WS/BankWebService/AlterarContaRequest", output = "http://WS/BankWebService/AlterarContaResponse")
    public int alterarConta(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod(operationName = "RealizarSaque")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "RealizarSaque", targetNamespace = "http://WS/", className = "ws.RealizarSaque")
    @ResponseWrapper(localName = "RealizarSaqueResponse", targetNamespace = "http://WS/", className = "ws.RealizarSaqueResponse")
    @Action(input = "http://WS/BankWebService/RealizarSaqueRequest", output = "http://WS/BankWebService/RealizarSaqueResponse")
    public int realizarSaque(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        float arg2);

    /**
     * 
     * @param ag
     * @param conta
     * @param nome
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "cadastrarConta", targetNamespace = "http://WS/", className = "ws.CadastrarConta")
    @ResponseWrapper(localName = "cadastrarContaResponse", targetNamespace = "http://WS/", className = "ws.CadastrarContaResponse")
    @Action(input = "http://WS/BankWebService/cadastrarContaRequest", output = "http://WS/BankWebService/cadastrarContaResponse")
    public int cadastrarConta(
        @WebParam(name = "nome", targetNamespace = "")
        String nome,
        @WebParam(name = "ag", targetNamespace = "")
        int ag,
        @WebParam(name = "conta", targetNamespace = "")
        int conta);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "ContaExistente")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ContaExistente", targetNamespace = "http://WS/", className = "ws.ContaExistente")
    @ResponseWrapper(localName = "ContaExistenteResponse", targetNamespace = "http://WS/", className = "ws.ContaExistenteResponse")
    @Action(input = "http://WS/BankWebService/ContaExistenteRequest", output = "http://WS/BankWebService/ContaExistenteResponse")
    public boolean contaExistente(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns ws.Conta
     */
    @WebMethod(operationName = "ConsultarConta")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ConsultarConta", targetNamespace = "http://WS/", className = "ws.ConsultarConta")
    @ResponseWrapper(localName = "ConsultarContaResponse", targetNamespace = "http://WS/", className = "ws.ConsultarContaResponse")
    @Action(input = "http://WS/BankWebService/ConsultarContaRequest", output = "http://WS/BankWebService/ConsultarContaResponse")
    public Conta consultarConta(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

}
